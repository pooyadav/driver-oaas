FROM python:3.5
MAINTAINER DataBox <p.yadav@acm.org>

ADD .  /app

WORKDIR /app

ENV SRC_DIR=/tmp
ENV CC=/usr/bin/clang CXX=/usr/bin/clang++

RUN apt-get update -qq && apt-get install -y --force-yes \
RUN apt-get install -y ant \
    autoconf \
    automake \
    build-essential \
    curl \
    checkinstall \
    clang \
    cmake \
    default-jdk \
    f2c \
    gfortran \
    git \
    g++ \
    imagemagick \
    libass-dev \
    libatlas-base-dev \
    libavcodec-dev \
    libavformat-dev \
    libcnf-dev \
    libfaac-dev \
    libfreeimage-dev \
    libjpeg-dev \
    libjasper-dev \
    libgnutls-dev \
    liblapack3 \
    libmp3lame-dev \
    libpq-dev \
    libpng-dev \
    libssl-dev \
    libtheora-dev \
    libtiff4-dev \
    libtool \
    libxine-dev \
    libxvidcore-dev \
    libv4l-dev \
    libvorbis-dev \
    mercurial \
    openssl \
    pkg-config \
    postgresql-client \
    supervisor \
    wget \
    unzip; \
    apt-get clean


RUN pip3 install \
        numpy==1.13.1

    # download opencv source
#RUN mkdir -p ${SRC_DIR} \
#    && cd ${SRC_DIR} \
#    && wget https://github.com/opencv/opencv/archive/3.2.0.zip \
#    && apt-get install unzip \
#    && unzip 3.2.0.zip \
#    && mv opencv-3.2.0 opencv \
#    && rm 3.2.0.zip \

#    # fix for numpy compilation
#    && ln -s /usr/include/locale.h /usr/include/xlocale.h \
#    && pip3 install \
#        numpy==1.13.1 \

#    # if building from opencv source
#    && mkdir -p ${SRC_DIR} \
#    && cd ${SRC_DIR} \
#    && wget https://github.com/opencv/opencv/archive/3.2.0.zip \
#    && unzip 3.2.0.zip \
#    && mv opencv-3.2.0 opencv \
#    && rm 3.2.0.zip \

    # download opnecv_contrib source
#    && wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip \
#    && unzip 3.2.0.zip \
#    && mv opencv_contrib-3.2.0 opencv_contrib \
#    && rm 3.2.0.zip \

    # build
#    && mkdir -p ${SRC_DIR}/opencv/build \
#    && cd ${SRC_DIR}/opencv/build \
#    && cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local \
#         -D PYTHON_EXECUTABLE=$(which python3)-D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules/ -D BUILD_DOCS=OFF .. \
#    && make -j4 \
#    && make install \
#    && rm -rf ${SRC_DIR} \
#    && ln /dev/null /dev/raw1394 \

#if building using whl
RUN pip3 install --upgrade opencv_python-3.3.0.9-cp35-cp35m-manylinux1_x86_64.whl

RUN pip3 install -r ./requirements.txt

# tensorflow version 1.3
RUN pip3 install --upgrade  https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.3.0rc2-cp35-cp35m-linux_x86_64.whl

RUN echo "Hello User!"

EXPOSE 8080

LABEL databox.type="driver"

#ENTRYPOINT ["python"]
ENTRYPOINT ["/usr/bin/bash"]
#CMD ["-u", "facenet/src/2A.py" ]
